char serial_data;   // 将从串口读入的消息存储在该变量中
const int TrigPin = 2;
const int EchoPin = 3;
float cm;
#define PIEZO 11
int LEFT1  = 12;
int RIGHT1 = 13;
int wheel_R_1 = 5;  // 右轮in1对应Arduino 5号引脚
int wheel_R_2 = 6; // 右轮in2对应Arduino 6号引脚
int wheel_L_1 = 9;  // 左轮in1对应Arduino 9号引脚
int wheel_L_2 = 10;  // 左轮in2对应Arduino 10号引脚
void setup(){
    // 配置所有控制轮的引脚为输出
    pinMode(PIEZO, OUTPUT);
    pinMode(wheel_L_1, OUTPUT);
    pinMode(wheel_L_2, OUTPUT);
    pinMode(wheel_R_1, OUTPUT);
    pinMode(wheel_R_2, OUTPUT);  
    pinMode(TrigPin, OUTPUT);
    pinMode(EchoPin, INPUT);
    pinMode(LEFT1,OUTPUT);
    pinMode(RIGHT1,OUTPUT);
    // 配置串口波特率
    Serial.begin(9600);
}

void loop(){
    digitalWrite(TrigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(TrigPin,HIGH);
    delayMicroseconds(10);
    digitalWrite(TrigPin, LOW);

    cm = pulseIn(EchoPin, HIGH)/50.0;
    cm = (int(cm * 100.0))/100.0;
    Serial.print("Distance:");
    Serial.print(cm);
    Serial.print("cm");
    Serial.println();
    delay(1000);
    if(cm<=15 && serial_data == 'w') stop();
    if(Serial.available()){
        serial_data = Serial.read();
        if( serial_data == 'w' ){
            move_ahead( );
            digitalWrite(12,HIGH);
            digitalWrite(13,HIGH);
            Serial.println("The car is moving ahead!");
        }
        else if( serial_data == 'x'){
            move_backwards( );
            digitalWrite(12,LOW);
            digitalWrite(13,LOW);
            Serial.println("The car is moving backwards!");
        }
        else if( serial_data == 'a'){
            turn_left( );
            digitalWrite(12,HIGH);
            digitalWrite(13,LOW);
            Serial.println("The car is turning left!");
        }
        else if( serial_data == 'd'){
            turn_right( );
            digitalWrite(12,LOW);
            digitalWrite(13,HIGH);
            Serial.println("The car is turning right!");
        }
        else if( serial_data == 's'){
            stop();
            Serial.println("The car is stopping!");
        }
    }
}


void move_ahead(){
    digitalWrite( wheel_L_1, HIGH);
    digitalWrite( wheel_L_2, LOW);
    digitalWrite( wheel_R_1, HIGH);
    digitalWrite( wheel_R_2, LOW);
}

void move_backwards(){
    digitalWrite( wheel_L_1, LOW);
    digitalWrite( wheel_L_2, HIGH);
    digitalWrite( wheel_R_1, LOW);
    digitalWrite( wheel_R_2, HIGH);
}

void turn_left(){
    digitalWrite( wheel_L_1, LOW);
    digitalWrite( wheel_L_2, LOW);
    digitalWrite( wheel_R_1, HIGH);
    digitalWrite( wheel_R_2, LOW);
}

void turn_right(){
    digitalWrite( wheel_L_1, HIGH);
    digitalWrite( wheel_L_2, LOW);
    digitalWrite( wheel_R_1, LOW);
    digitalWrite( wheel_R_2, LOW);
}

void stop(){
    digitalWrite(12,LOW);
    digitalWrite(13,LOW);
    analogWrite(PIEZO, 128);
    delay(500);
    digitalWrite(PIEZO, LOW);
    delay(500);
    digitalWrite( wheel_L_1, LOW);
    digitalWrite( wheel_L_2, LOW);
    digitalWrite( wheel_R_1, LOW);
    digitalWrite( wheel_R_2, LOW);
}